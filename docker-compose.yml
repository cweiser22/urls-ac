version: '3.8'

services:
  app:
    build: ./app
    deploy:
      replicas: 3
    networks:
      - urls-ac-network
    env_file:
      - .env

  nginx:
    image: nginx:latest
    ports:
        - "80:80"
        - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./frontend/dist:/var/www/urls-ac-frontend
    networks:
      - urls-ac-network
    depends_on:
      - app


  prometheus:
    image: prom/prometheus
    volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - urls-ac-network
    depends_on:
      - app

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - urls-ac-network
    depends_on:
      - prometheus

  agent:
    container_name: newrelic-infra
    build:
      context: .
      dockerfile: newrelic-infra.dockerfile
    cap_add:
      - SYS_PTRACE
    pid: host
    privileged: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped
    networks:
      - urls-ac-network




volumes:
    postgres_data:
    grafana-storage:

networks:
  urls-ac-network:
    driver: bridge